/** @format */

"use client";
import { useCart } from "@/context/CartContext";
import type { Product } from "@/lib/products";
import { MouseEvent } from "react";

export default function AddToCartButton({ product }: { product: Product }) {
  const { addItem, getQtyInCart } = useCart();
  const current = getQtyInCart(product.id);
  const isOutOfStock = product.stock <= 0;

  // Cho s·∫£n ph·∫©m ƒë·∫∑t tr∆∞·ªõc, gi·ªõi h·∫°n t·ªëi ƒëa 10, cho s·∫£n ph·∫©m c√≥ s·∫µn th√¨ theo stock
  const maxAllowed = isOutOfStock ? 10 : product.stock;
  const isMaxQty = current >= maxAllowed;
  const disabled = isMaxQty; // Ch·ªâ disable khi ƒë√£ ƒë·∫°t s·ªë l∆∞·ª£ng t·ªëi ƒëa

  function handleAdd(e: MouseEvent<HTMLButtonElement>) {
    if (isOutOfStock) {
      // Th√™m s·∫£n ph·∫©m ƒë·∫∑t tr∆∞·ªõc v√†o gi·ªè h√†ng nh∆∞ b√¨nh th∆∞·ªùng
      addItem(product, 1);

      // Hi·ªÉn th·ªã th√¥ng b√°o ƒë·∫∑t tr∆∞·ªõc
      alert(
        `ƒê√£ th√™m "${product.name}" v√†o gi·ªè h√†ng (ƒê·∫∂T TR∆Ø·ªöC)\n\n‚ö†Ô∏è TH√îNG B√ÅO QUAN TR·ªåNG:\n‚Ä¢ Th·ªùi gian giao h√†ng: 6-7 ng√†y\n‚Ä¢ B·∫Øt bu·ªôc thanh to√°n tr∆∞·ªõc\n‚Ä¢ Vui l√≤ng thanh to√°n tr∆∞·ªõc cho shop\n\nShop xin ch√¢n th√†nh c·∫£m ∆°n! üôè`
      );

      // T·∫°o hi·ªáu ·ª©ng gi·ªè h√†ng nh∆∞ b√¨nh th∆∞·ªùng
      const rect = (
        e.currentTarget as HTMLButtonElement
      ).getBoundingClientRect();
      window.dispatchEvent(
        new CustomEvent("cart:add", {
          detail: {
            image: product.image,
            from: { x: rect.left, y: rect.top, w: rect.width, h: rect.height },
          },
        })
      );
      return;
    }

    addItem(product, 1);
    const rect = (e.currentTarget as HTMLButtonElement).getBoundingClientRect();
    window.dispatchEvent(
      new CustomEvent("cart:add", {
        detail: {
          image: product.image,
          from: { x: rect.left, y: rect.top, w: rect.width, h: rect.height },
        },
      })
    );
  }

  // X√°c ƒë·ªãnh text v√† style c·ªßa button
  let buttonText = "Th√™m v√†o gi·ªè";
  let buttonClass = "btn-primary";

  if (isOutOfStock) {
    buttonText = isMaxQty ? "ƒê√£ ƒë·∫∑t t·ªëi ƒëa" : "ƒê·∫∑t tr∆∞·ªõc";
    buttonClass = isMaxQty
      ? "btn-primary opacity-50 cursor-not-allowed"
      : "btn-secondary bg-orange-500 hover:bg-orange-600 text-white border-orange-500";
  } else if (isMaxQty) {
    buttonText = "H·∫øt h√†ng";
    buttonClass = "btn-primary opacity-50 cursor-not-allowed";
  }

  return (
    <button onClick={handleAdd} disabled={disabled} className={buttonClass}>
      {buttonText}
    </button>
  );
}
